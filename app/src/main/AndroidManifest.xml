<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
>

    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

            //使用兼容库就无需判断系统版本

            int hasWriteStoragePermission = ContextCompat.checkSelfPermission(getApplication(), Manifest.permission.WRITE_EXTERNAL_STORAGE);

            if (hasWriteStoragePermission == PackageManager.PERMISSION_GRANTED) {

                            //拥有权限，执行操作

                initScan();

            }else{

                            //没有权限，向用户请求权限

                ActivityCompat.requestPermissions(thisActivity, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, MyApplication.CODE_FOR_WRITE_PERMISSION);

            }

        @Override

        public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {

                    //通过requestCode来识别是否同一个请求

            if (requestCode == CODE_FOR_WRITE_PERMISSION){

                if (grantResults.length > 0  grantResults[0] == PackageManager.PERMISSION_GRANTED){

                    //用户同意，执行操作

                    initScan();

                }else{

                    //用户不同意，向用户展示该权限作用

                    if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {

                        new AlertDialog.Builder(thisActivity)

                                .setMessage(R.string.storage_permissions_remind)

                                .setPositiveButton("OK", (dialog1, which) ->

                                        ActivityCompat.requestPermissions(this,

                                                new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},

                                                EventConstConfig.CODE_FOR_CAMERA_PERMISSION))

                                .setNegativeButton("Cancel", null)

                                .create()

                                .show();

                    }

                }

            }

        }

    <application
            android:allowBackup="true"
            android:fullBackupContent="@xml/backup_rules"
            tools:targetApi="31"
            android:dataExtractionRules="@xml/data_extraction_rules"
            android:label="@string/app_name"
            android:icon="@drawable/ic_launcher_foreground"
            android:supportsRtl="true"
            android:theme="@style/Theme.Boat_H2O2"/>

</manifest>